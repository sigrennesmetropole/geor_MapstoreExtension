stages:
    - build
    - test
    - quality
    - deployment

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: 'never'
    - if: $CI_COMMIT_BRANCH

deployment:integration:
    stage: deployment
    script: 
        - echo "Deployment integration"
    when: manual
    environment: develop

deployment:production:
    stage: deployment
    script: 
        - echo "Deployment production"
    rules:
        - if: $CI_COMMIT_TAG

quality:
    stage: quality
    script:
        - echo "Lancement sonarQube"
    needs:
        - test
    rules:
        - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"

test:
    stage: test
    script:
        - echo "test"
    needs:
        - build
    rules:
        - if: $CI_PIPELINE_SOURCE != 'merge_request_event'
          allow_failure: true
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

build:
    stage: build
    image: node:14-bullseye
    script: 
        - echo plop
        - cd $CI_PROJECT_DIR
        - git submodule update js/extension
        - git submodule update MapStore2
        - npm ci
        - npm run ext:build
    variables:
        GIT_SUBMODULE_STRATEGY: none
    artifacts:
        paths: 
            - dist/SampleExtension.zip
        expire_in: 1 day
